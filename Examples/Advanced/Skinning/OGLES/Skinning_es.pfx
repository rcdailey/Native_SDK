<pfx version="1.0.0" description="MagicLantern: Dynamic Lighting example" copyright="Imagination Technologies Ltd.">
	<texture name="marble" path="marble.pvr"/>
	<texture name="gbuff" format="rgba8888"/>

	<effect name="RenderObject">
		<pipeline name="SkinnedEffect">
			<condition type="requiresUniformSemantic" name="NORMALMAP"/>
			<condition type="requiresAttributeSemantic" name="BONEWEIGHT"/>
		</pipeline>
		<!-- Render with bumpmapping. The application needs to pick this or the next. -->
		<pipeline name="DefaultEffect"/>
		<!-- Render without bumpmapping or skinning. The application needs to pick this or the prev. -->
	</effect>

	<pipeline name="SkinnedEffect" primitiveTopology="triangleList">
	  
		<depthStencil depthTest="true"/>
		<vboBinding index="0" stepRate="vertex"/>
		<depthStencil depthTest="true"/>
		<rasterization faceCulling="back"/>
		<attribute location="0" vboBinding="0" variable="inVertex" semantic="POSITION" dataType="vec3" />
		<attribute location="1" vboBinding="0" variable="inNormal" semantic="NORMAL" dataType="vec3" />
		<attribute location="2" vboBinding="0" variable="inTangent" semantic="TANGENT" dataType="vec3" />
		<attribute location="3" vboBinding="0" variable="inBiNormal" semantic="BINORMAL" dataType="vec3" />
		<attribute location="4" vboBinding="0" variable="inTexCoord" semantic="UV0" dataType="vec2" />
		<attribute location="5" vboBinding="0" variable="inBoneWeights" semantic="BONEWEIGHT" dataType="vec4" />
		<attribute location="6" vboBinding="0" variable="inBoneIndex" semantic="BONEINDEX" dataType="uvec4" />

		<uniform variable="ViewProjMatrix" semantic="VPMATRIX" dataType="mat4x4" scope="model"/>
		<uniform variable="LightPos" semantic="LIGHTPOSITION" dataType="vec3" scope="model"/>
		<uniform variable="BoneCount" semantic="BONECOUNT" dataType="int" scope="node"/>
		<uniform variable="BoneMatrixArray" arrayElements="8" semantic="BONEMATRIXARRAY" dataType="mat4x4" scope="node"/>
		<uniform variable="BoneMatrixArrayIT" arrayElements="8" semantic="BONEMATRIXARRAYIT" dataType="mat3x3" scope="node"/>

		<texture set="0" binding="0" variable="sTexture" semantic="DIFFUSETEX"
		minification="linear" magnification="linear" mipmap="linear" wrap_s="clamp" wrap_t="clamp"/>
		<texture set="0" binding="1" variable="sNormalMap" semantic="NORMALMAP"
		minification="linear" magnification="linear" mipmap="none" wrap_s="clamp" wrap_t="clamp"/>

		<shader name="SkinnedVertexShader"/>
		<shader name="SkinnedFragmentShader"/>
	</pipeline>

	<pipeline name="DefaultEffect">
	    <depthStencil depthTest="true"/>
        <rasterization faceCulling="back"/>
		<attribute location="0" variable="inVertex" semantic="POSITION" dataType="vec3"/>
		<attribute location="1" variable="inNormal" semantic="NORMAL" dataType="vec3"/>
		<attribute location="2" variable="inTexCoord" semantic="UV0" dataType="vec2"/>

		<uniform variable="ModelMatrix" semantic="MODELMATRIX" dataType="mat4x4" scope="node"/>
		<uniform variable="MVPMatrix" semantic="MVPMATRIX" dataType="mat4x4" scope="node"/>
		<uniform variable="ModelWorldIT3x3" semantic="WORLDITMATRIX" dataType="mat3x3" scope="node"/>
		<uniform variable="LightPos" semantic="LIGHTPOSITION" dataType="vec3" scope="model"/>

		<texture set="0" binding="0" variable="sTexture" semantic="DIFFUSETEX"
		minification="linear" magnification="linear" mipmap="linear" wrap_s="clamp" wrap_t="clamp"/>

		<shader name="DefaultVertexShader"/>
		<shader name="DefaultFragmentShader"/>
	</pipeline>
	
	
	
	<shader type="vertex" name="DefaultVertexShader">
		<file path="DefaultVertShader_ES3.vsh" apiVersion="GL3"/>
		<file path="DefaultVertShader_ES2.vsh" apiVersion="GL2"/>
	</shader>

	<shader type="fragment" name="DefaultFragmentShader">
		<file path="DefaultFragShader_ES3.fsh" apiVersion="GL3"/>
		<file path="DefaultFragShader_ES2.fsh" apiVersion="GL2"/>
	</shader>

	<shader type="vertex" name="SkinnedVertexShader">
		<file path="SkinnedVertShader_ES3.vsh" apiVersion="GL3"/>
		<file path="SkinnedVertShader_ES2.vsh" apiVersion="GL2"/>
	</shader>

	<shader type="fragment" name="SkinnedFragmentShader">
		<file path="SkinnedFragShader_ES3.fsh" apiVersion="GL3"/>
		<file path="SkinnedFragShader_ES2.fsh" apiVersion="GL2"/>
	</shader>
</pfx>